//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace DbxlEventReceiverWeb.DbxlDocumentService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="IDbxlDocumentService", Namespace="http://qdabra.com/webservices/")]
    public partial class IDbxlDocumentService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetDocumentHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentFromRefIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback LockDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnlockDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitDocumentAsUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveAllDocumentsForTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnumerateDocumentTypeNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnumerateDocumentTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentTypeSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllDocumentTypeSummariesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentTypeSummariesByGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDocumentTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrepareTemplateForSigningOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDocumentTypeMappingOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveDocumentTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentsByTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyDocumentsByTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentSummaryByTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyDocumentSummaryByTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyListItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryDocumentsHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchExOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeDocumentTypeOfDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentTypeIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentTypePermissionInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitDocumentWithKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitDocumentWithKeyAsUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryDocumentWithKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryDocumentsNodeSetOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public IDbxlDocumentService() {
            this.Url = global::DbxlEventReceiverWeb.Properties.Settings.Default.DbxlEventReceiverWeb_DbxlNet_DbxlDocumentService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetDocumentHistoryCompletedEventHandler GetDocumentHistoryCompleted;
        
        /// <remarks/>
        public event GetDocumentCompletedEventHandler GetDocumentCompleted;
        
        /// <remarks/>
        public event GetDocumentStringCompletedEventHandler GetDocumentStringCompleted;
        
        /// <remarks/>
        public event GetDocumentVersionCompletedEventHandler GetDocumentVersionCompleted;
        
        /// <remarks/>
        public event GetDocumentFromRefIdCompletedEventHandler GetDocumentFromRefIdCompleted;
        
        /// <remarks/>
        public event LockDocumentCompletedEventHandler LockDocumentCompleted;
        
        /// <remarks/>
        public event UnlockDocumentCompletedEventHandler UnlockDocumentCompleted;
        
        /// <remarks/>
        public event SubmitDocumentAsUserCompletedEventHandler SubmitDocumentAsUserCompleted;
        
        /// <remarks/>
        public event SubmitDocumentCompletedEventHandler SubmitDocumentCompleted;
        
        /// <remarks/>
        public event RemoveDocumentCompletedEventHandler RemoveDocumentCompleted;
        
        /// <remarks/>
        public event RemoveDocumentsCompletedEventHandler RemoveDocumentsCompleted;
        
        /// <remarks/>
        public event RemoveAllDocumentsForTypeCompletedEventHandler RemoveAllDocumentsForTypeCompleted;
        
        /// <remarks/>
        public event EnumerateDocumentTypeNamesCompletedEventHandler EnumerateDocumentTypeNamesCompleted;
        
        /// <remarks/>
        public event EnumerateDocumentTypesCompletedEventHandler EnumerateDocumentTypesCompleted;
        
        /// <remarks/>
        public event GetDocumentTypeCompletedEventHandler GetDocumentTypeCompleted;
        
        /// <remarks/>
        public event GetDocumentTypeSummaryCompletedEventHandler GetDocumentTypeSummaryCompleted;
        
        /// <remarks/>
        public event GetAllDocumentTypeSummariesCompletedEventHandler GetAllDocumentTypeSummariesCompleted;
        
        /// <remarks/>
        public event GetDocumentTypeSummariesByGroupCompletedEventHandler GetDocumentTypeSummariesByGroupCompleted;
        
        /// <remarks/>
        public event SetDocumentTypeCompletedEventHandler SetDocumentTypeCompleted;
        
        /// <remarks/>
        public event PrepareTemplateForSigningCompletedEventHandler PrepareTemplateForSigningCompleted;
        
        /// <remarks/>
        public event SetDocumentTypeMappingCompletedEventHandler SetDocumentTypeMappingCompleted;
        
        /// <remarks/>
        public event RemoveDocumentTypeCompletedEventHandler RemoveDocumentTypeCompleted;
        
        /// <remarks/>
        public event GetDocumentsByTypeCompletedEventHandler GetDocumentsByTypeCompleted;
        
        /// <remarks/>
        public event GetMyDocumentsByTypeCompletedEventHandler GetMyDocumentsByTypeCompleted;
        
        /// <remarks/>
        public event GetDocumentSummaryByTypeCompletedEventHandler GetDocumentSummaryByTypeCompleted;
        
        /// <remarks/>
        public event GetMyDocumentSummaryByTypeCompletedEventHandler GetMyDocumentSummaryByTypeCompleted;
        
        /// <remarks/>
        public event GetListItemsCompletedEventHandler GetListItemsCompleted;
        
        /// <remarks/>
        public event GetMyListItemsCompletedEventHandler GetMyListItemsCompleted;
        
        /// <remarks/>
        public event QueryDocumentsCompletedEventHandler QueryDocumentsCompleted;
        
        /// <remarks/>
        public event QueryDocumentsHistoryCompletedEventHandler QueryDocumentsHistoryCompleted;
        
        /// <remarks/>
        public event SearchCompletedEventHandler SearchCompleted;
        
        /// <remarks/>
        public event SearchExCompletedEventHandler SearchExCompleted;
        
        /// <remarks/>
        public event ChangeDocumentTypeOfDocumentCompletedEventHandler ChangeDocumentTypeOfDocumentCompleted;
        
        /// <remarks/>
        public event GetDocumentTypeIdCompletedEventHandler GetDocumentTypeIdCompleted;
        
        /// <remarks/>
        public event GetDocumentTypePermissionInfoCompletedEventHandler GetDocumentTypePermissionInfoCompleted;
        
        /// <remarks/>
        public event SubmitDocumentWithKeyCompletedEventHandler SubmitDocumentWithKeyCompleted;
        
        /// <remarks/>
        public event SubmitDocumentWithKeyAsUserCompletedEventHandler SubmitDocumentWithKeyAsUserCompleted;
        
        /// <remarks/>
        public event QueryDocumentWithKeyCompletedEventHandler QueryDocumentWithKeyCompleted;
        
        /// <remarks/>
        public event QueryDocumentsNodeSetCompletedEventHandler QueryDocumentsNodeSetCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/GetDocumentHistory", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo GetDocumentHistory(int docId, out DocumentInfo[] docInfo) {
            object[] results = this.Invoke("GetDocumentHistory", new object[] {
                        docId});
            docInfo = ((DocumentInfo[])(results[1]));
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentHistoryAsync(int docId) {
            this.GetDocumentHistoryAsync(docId, null);
        }
        
        /// <remarks/>
        public void GetDocumentHistoryAsync(int docId, object userState) {
            if ((this.GetDocumentHistoryOperationCompleted == null)) {
                this.GetDocumentHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentHistoryOperationCompleted);
            }
            this.InvokeAsync("GetDocumentHistory", new object[] {
                        docId}, this.GetDocumentHistoryOperationCompleted, userState);
        }
        
        private void OnGetDocumentHistoryOperationCompleted(object arg) {
            if ((this.GetDocumentHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentHistoryCompleted(this, new GetDocumentHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/GetDocument", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo GetDocument(int docId, out DocumentInfo docInfo) {
            object[] results = this.Invoke("GetDocument", new object[] {
                        docId});
            docInfo = ((DocumentInfo)(results[1]));
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentAsync(int docId) {
            this.GetDocumentAsync(docId, null);
        }
        
        /// <remarks/>
        public void GetDocumentAsync(int docId, object userState) {
            if ((this.GetDocumentOperationCompleted == null)) {
                this.GetDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentOperationCompleted);
            }
            this.InvokeAsync("GetDocument", new object[] {
                        docId}, this.GetDocumentOperationCompleted, userState);
        }
        
        private void OnGetDocumentOperationCompleted(object arg) {
            if ((this.GetDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentCompleted(this, new GetDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/GetDocumentString", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo GetDocumentString(int docId, out DocumentStringInfo docInfo) {
            object[] results = this.Invoke("GetDocumentString", new object[] {
                        docId});
            docInfo = ((DocumentStringInfo)(results[1]));
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentStringAsync(int docId) {
            this.GetDocumentStringAsync(docId, null);
        }
        
        /// <remarks/>
        public void GetDocumentStringAsync(int docId, object userState) {
            if ((this.GetDocumentStringOperationCompleted == null)) {
                this.GetDocumentStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentStringOperationCompleted);
            }
            this.InvokeAsync("GetDocumentString", new object[] {
                        docId}, this.GetDocumentStringOperationCompleted, userState);
        }
        
        private void OnGetDocumentStringOperationCompleted(object arg) {
            if ((this.GetDocumentStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentStringCompleted(this, new GetDocumentStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/GetDocumentVersion", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo GetDocumentVersion(int docId, int version, out DocumentInfo docInfo) {
            object[] results = this.Invoke("GetDocumentVersion", new object[] {
                        docId,
                        version});
            docInfo = ((DocumentInfo)(results[1]));
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentVersionAsync(int docId, int version) {
            this.GetDocumentVersionAsync(docId, version, null);
        }
        
        /// <remarks/>
        public void GetDocumentVersionAsync(int docId, int version, object userState) {
            if ((this.GetDocumentVersionOperationCompleted == null)) {
                this.GetDocumentVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentVersionOperationCompleted);
            }
            this.InvokeAsync("GetDocumentVersion", new object[] {
                        docId,
                        version}, this.GetDocumentVersionOperationCompleted, userState);
        }
        
        private void OnGetDocumentVersionOperationCompleted(object arg) {
            if ((this.GetDocumentVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentVersionCompleted(this, new GetDocumentVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/GetDocumentFromRefId", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo GetDocumentFromRefId(string docTypeName, string refId, int version, out DocumentInfo docInfo) {
            object[] results = this.Invoke("GetDocumentFromRefId", new object[] {
                        docTypeName,
                        refId,
                        version});
            docInfo = ((DocumentInfo)(results[1]));
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentFromRefIdAsync(string docTypeName, string refId, int version) {
            this.GetDocumentFromRefIdAsync(docTypeName, refId, version, null);
        }
        
        /// <remarks/>
        public void GetDocumentFromRefIdAsync(string docTypeName, string refId, int version, object userState) {
            if ((this.GetDocumentFromRefIdOperationCompleted == null)) {
                this.GetDocumentFromRefIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentFromRefIdOperationCompleted);
            }
            this.InvokeAsync("GetDocumentFromRefId", new object[] {
                        docTypeName,
                        refId,
                        version}, this.GetDocumentFromRefIdOperationCompleted, userState);
        }
        
        private void OnGetDocumentFromRefIdOperationCompleted(object arg) {
            if ((this.GetDocumentFromRefIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentFromRefIdCompleted(this, new GetDocumentFromRefIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/LockDocument", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo LockDocument(int docId, string lockComments, out DocumentInfo docInfo) {
            object[] results = this.Invoke("LockDocument", new object[] {
                        docId,
                        lockComments});
            docInfo = ((DocumentInfo)(results[1]));
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void LockDocumentAsync(int docId, string lockComments) {
            this.LockDocumentAsync(docId, lockComments, null);
        }
        
        /// <remarks/>
        public void LockDocumentAsync(int docId, string lockComments, object userState) {
            if ((this.LockDocumentOperationCompleted == null)) {
                this.LockDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLockDocumentOperationCompleted);
            }
            this.InvokeAsync("LockDocument", new object[] {
                        docId,
                        lockComments}, this.LockDocumentOperationCompleted, userState);
        }
        
        private void OnLockDocumentOperationCompleted(object arg) {
            if ((this.LockDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LockDocumentCompleted(this, new LockDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/UnlockDocument", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo UnlockDocument(int docId, out DocumentInfo docInfo) {
            object[] results = this.Invoke("UnlockDocument", new object[] {
                        docId});
            docInfo = ((DocumentInfo)(results[1]));
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void UnlockDocumentAsync(int docId) {
            this.UnlockDocumentAsync(docId, null);
        }
        
        /// <remarks/>
        public void UnlockDocumentAsync(int docId, object userState) {
            if ((this.UnlockDocumentOperationCompleted == null)) {
                this.UnlockDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnlockDocumentOperationCompleted);
            }
            this.InvokeAsync("UnlockDocument", new object[] {
                        docId}, this.UnlockDocumentOperationCompleted, userState);
        }
        
        private void OnUnlockDocumentOperationCompleted(object arg) {
            if ((this.UnlockDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnlockDocumentCompleted(this, new UnlockDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/SubmitDocumentAsUser", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo SubmitDocumentAsUser(string submitAsUser, string docTypeName, string xml, string name, string author, string description, string allowOverwrite, out int docId, out string refId) {
            object[] results = this.Invoke("SubmitDocumentAsUser", new object[] {
                        submitAsUser,
                        docTypeName,
                        xml,
                        name,
                        author,
                        description,
                        allowOverwrite});
            docId = ((int)(results[1]));
            refId = ((string)(results[2]));
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitDocumentAsUserAsync(string submitAsUser, string docTypeName, string xml, string name, string author, string description, string allowOverwrite) {
            this.SubmitDocumentAsUserAsync(submitAsUser, docTypeName, xml, name, author, description, allowOverwrite, null);
        }
        
        /// <remarks/>
        public void SubmitDocumentAsUserAsync(string submitAsUser, string docTypeName, string xml, string name, string author, string description, string allowOverwrite, object userState) {
            if ((this.SubmitDocumentAsUserOperationCompleted == null)) {
                this.SubmitDocumentAsUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitDocumentAsUserOperationCompleted);
            }
            this.InvokeAsync("SubmitDocumentAsUser", new object[] {
                        submitAsUser,
                        docTypeName,
                        xml,
                        name,
                        author,
                        description,
                        allowOverwrite}, this.SubmitDocumentAsUserOperationCompleted, userState);
        }
        
        private void OnSubmitDocumentAsUserOperationCompleted(object arg) {
            if ((this.SubmitDocumentAsUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitDocumentAsUserCompleted(this, new SubmitDocumentAsUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/SubmitDocument", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo SubmitDocument(string docTypeName, string xml, string name, string author, string description, string allowOverwrite, out int docId, out string refId) {
            object[] results = this.Invoke("SubmitDocument", new object[] {
                        docTypeName,
                        xml,
                        name,
                        author,
                        description,
                        allowOverwrite});
            docId = ((int)(results[1]));
            refId = ((string)(results[2]));
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitDocumentAsync(string docTypeName, string xml, string name, string author, string description, string allowOverwrite) {
            this.SubmitDocumentAsync(docTypeName, xml, name, author, description, allowOverwrite, null);
        }
        
        /// <remarks/>
        public void SubmitDocumentAsync(string docTypeName, string xml, string name, string author, string description, string allowOverwrite, object userState) {
            if ((this.SubmitDocumentOperationCompleted == null)) {
                this.SubmitDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitDocumentOperationCompleted);
            }
            this.InvokeAsync("SubmitDocument", new object[] {
                        docTypeName,
                        xml,
                        name,
                        author,
                        description,
                        allowOverwrite}, this.SubmitDocumentOperationCompleted, userState);
        }
        
        private void OnSubmitDocumentOperationCompleted(object arg) {
            if ((this.SubmitDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitDocumentCompleted(this, new SubmitDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/RemoveDocument", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo RemoveDocument(int docId) {
            object[] results = this.Invoke("RemoveDocument", new object[] {
                        docId});
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveDocumentAsync(int docId) {
            this.RemoveDocumentAsync(docId, null);
        }
        
        /// <remarks/>
        public void RemoveDocumentAsync(int docId, object userState) {
            if ((this.RemoveDocumentOperationCompleted == null)) {
                this.RemoveDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveDocumentOperationCompleted);
            }
            this.InvokeAsync("RemoveDocument", new object[] {
                        docId}, this.RemoveDocumentOperationCompleted, userState);
        }
        
        private void OnRemoveDocumentOperationCompleted(object arg) {
            if ((this.RemoveDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveDocumentCompleted(this, new RemoveDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/RemoveDocuments", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo RemoveDocuments(int[] docIds) {
            object[] results = this.Invoke("RemoveDocuments", new object[] {
                        docIds});
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveDocumentsAsync(int[] docIds) {
            this.RemoveDocumentsAsync(docIds, null);
        }
        
        /// <remarks/>
        public void RemoveDocumentsAsync(int[] docIds, object userState) {
            if ((this.RemoveDocumentsOperationCompleted == null)) {
                this.RemoveDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveDocumentsOperationCompleted);
            }
            this.InvokeAsync("RemoveDocuments", new object[] {
                        docIds}, this.RemoveDocumentsOperationCompleted, userState);
        }
        
        private void OnRemoveDocumentsOperationCompleted(object arg) {
            if ((this.RemoveDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveDocumentsCompleted(this, new RemoveDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/RemoveAllDocumentsForType", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo RemoveAllDocumentsForType(string docTypeName) {
            object[] results = this.Invoke("RemoveAllDocumentsForType", new object[] {
                        docTypeName});
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveAllDocumentsForTypeAsync(string docTypeName) {
            this.RemoveAllDocumentsForTypeAsync(docTypeName, null);
        }
        
        /// <remarks/>
        public void RemoveAllDocumentsForTypeAsync(string docTypeName, object userState) {
            if ((this.RemoveAllDocumentsForTypeOperationCompleted == null)) {
                this.RemoveAllDocumentsForTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveAllDocumentsForTypeOperationCompleted);
            }
            this.InvokeAsync("RemoveAllDocumentsForType", new object[] {
                        docTypeName}, this.RemoveAllDocumentsForTypeOperationCompleted, userState);
        }
        
        private void OnRemoveAllDocumentsForTypeOperationCompleted(object arg) {
            if ((this.RemoveAllDocumentsForTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveAllDocumentsForTypeCompleted(this, new RemoveAllDocumentsForTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/EnumerateDocumentTypeNames", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo EnumerateDocumentTypeNames(out string[] docTypeNames) {
            object[] results = this.Invoke("EnumerateDocumentTypeNames", new object[0]);
            docTypeNames = ((string[])(results[1]));
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void EnumerateDocumentTypeNamesAsync() {
            this.EnumerateDocumentTypeNamesAsync(null);
        }
        
        /// <remarks/>
        public void EnumerateDocumentTypeNamesAsync(object userState) {
            if ((this.EnumerateDocumentTypeNamesOperationCompleted == null)) {
                this.EnumerateDocumentTypeNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumerateDocumentTypeNamesOperationCompleted);
            }
            this.InvokeAsync("EnumerateDocumentTypeNames", new object[0], this.EnumerateDocumentTypeNamesOperationCompleted, userState);
        }
        
        private void OnEnumerateDocumentTypeNamesOperationCompleted(object arg) {
            if ((this.EnumerateDocumentTypeNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumerateDocumentTypeNamesCompleted(this, new EnumerateDocumentTypeNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/EnumerateDocumentTypes", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo EnumerateDocumentTypes(out DocumentTypeInfo[] docTypes) {
            object[] results = this.Invoke("EnumerateDocumentTypes", new object[0]);
            docTypes = ((DocumentTypeInfo[])(results[1]));
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void EnumerateDocumentTypesAsync() {
            this.EnumerateDocumentTypesAsync(null);
        }
        
        /// <remarks/>
        public void EnumerateDocumentTypesAsync(object userState) {
            if ((this.EnumerateDocumentTypesOperationCompleted == null)) {
                this.EnumerateDocumentTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumerateDocumentTypesOperationCompleted);
            }
            this.InvokeAsync("EnumerateDocumentTypes", new object[0], this.EnumerateDocumentTypesOperationCompleted, userState);
        }
        
        private void OnEnumerateDocumentTypesOperationCompleted(object arg) {
            if ((this.EnumerateDocumentTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumerateDocumentTypesCompleted(this, new EnumerateDocumentTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/GetDocumentType", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo GetDocumentType(string docTypeName, out DocumentTypeInfo docType) {
            object[] results = this.Invoke("GetDocumentType", new object[] {
                        docTypeName});
            docType = ((DocumentTypeInfo)(results[1]));
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentTypeAsync(string docTypeName) {
            this.GetDocumentTypeAsync(docTypeName, null);
        }
        
        /// <remarks/>
        public void GetDocumentTypeAsync(string docTypeName, object userState) {
            if ((this.GetDocumentTypeOperationCompleted == null)) {
                this.GetDocumentTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentTypeOperationCompleted);
            }
            this.InvokeAsync("GetDocumentType", new object[] {
                        docTypeName}, this.GetDocumentTypeOperationCompleted, userState);
        }
        
        private void OnGetDocumentTypeOperationCompleted(object arg) {
            if ((this.GetDocumentTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentTypeCompleted(this, new GetDocumentTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/GetDocumentTypeSummary", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo GetDocumentTypeSummary(string docTypeName, out DocumentTypeSummaryInfo docType) {
            object[] results = this.Invoke("GetDocumentTypeSummary", new object[] {
                        docTypeName});
            docType = ((DocumentTypeSummaryInfo)(results[1]));
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentTypeSummaryAsync(string docTypeName) {
            this.GetDocumentTypeSummaryAsync(docTypeName, null);
        }
        
        /// <remarks/>
        public void GetDocumentTypeSummaryAsync(string docTypeName, object userState) {
            if ((this.GetDocumentTypeSummaryOperationCompleted == null)) {
                this.GetDocumentTypeSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentTypeSummaryOperationCompleted);
            }
            this.InvokeAsync("GetDocumentTypeSummary", new object[] {
                        docTypeName}, this.GetDocumentTypeSummaryOperationCompleted, userState);
        }
        
        private void OnGetDocumentTypeSummaryOperationCompleted(object arg) {
            if ((this.GetDocumentTypeSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentTypeSummaryCompleted(this, new GetDocumentTypeSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/GetAllDocumentTypeSummaries", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo GetAllDocumentTypeSummaries(out DocumentTypeSummaryInfo[] docTypeSummaryInfo) {
            object[] results = this.Invoke("GetAllDocumentTypeSummaries", new object[0]);
            docTypeSummaryInfo = ((DocumentTypeSummaryInfo[])(results[1]));
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllDocumentTypeSummariesAsync() {
            this.GetAllDocumentTypeSummariesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllDocumentTypeSummariesAsync(object userState) {
            if ((this.GetAllDocumentTypeSummariesOperationCompleted == null)) {
                this.GetAllDocumentTypeSummariesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllDocumentTypeSummariesOperationCompleted);
            }
            this.InvokeAsync("GetAllDocumentTypeSummaries", new object[0], this.GetAllDocumentTypeSummariesOperationCompleted, userState);
        }
        
        private void OnGetAllDocumentTypeSummariesOperationCompleted(object arg) {
            if ((this.GetAllDocumentTypeSummariesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllDocumentTypeSummariesCompleted(this, new GetAllDocumentTypeSummariesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/GetDocumentTypeSummariesByGroup", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo GetDocumentTypeSummariesByGroup(string groupName, out DocumentTypeSummaryInfo[] docTypeSummaryInfo) {
            object[] results = this.Invoke("GetDocumentTypeSummariesByGroup", new object[] {
                        groupName});
            docTypeSummaryInfo = ((DocumentTypeSummaryInfo[])(results[1]));
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentTypeSummariesByGroupAsync(string groupName) {
            this.GetDocumentTypeSummariesByGroupAsync(groupName, null);
        }
        
        /// <remarks/>
        public void GetDocumentTypeSummariesByGroupAsync(string groupName, object userState) {
            if ((this.GetDocumentTypeSummariesByGroupOperationCompleted == null)) {
                this.GetDocumentTypeSummariesByGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentTypeSummariesByGroupOperationCompleted);
            }
            this.InvokeAsync("GetDocumentTypeSummariesByGroup", new object[] {
                        groupName}, this.GetDocumentTypeSummariesByGroupOperationCompleted, userState);
        }
        
        private void OnGetDocumentTypeSummariesByGroupOperationCompleted(object arg) {
            if ((this.GetDocumentTypeSummariesByGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentTypeSummariesByGroupCompleted(this, new GetDocumentTypeSummariesByGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/SetDocumentType", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo SetDocumentType(DocumentTypeInfo docType, string overrideDbConnectionString, string overrideEnumDbDatabase) {
            object[] results = this.Invoke("SetDocumentType", new object[] {
                        docType,
                        overrideDbConnectionString,
                        overrideEnumDbDatabase});
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void SetDocumentTypeAsync(DocumentTypeInfo docType, string overrideDbConnectionString, string overrideEnumDbDatabase) {
            this.SetDocumentTypeAsync(docType, overrideDbConnectionString, overrideEnumDbDatabase, null);
        }
        
        /// <remarks/>
        public void SetDocumentTypeAsync(DocumentTypeInfo docType, string overrideDbConnectionString, string overrideEnumDbDatabase, object userState) {
            if ((this.SetDocumentTypeOperationCompleted == null)) {
                this.SetDocumentTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDocumentTypeOperationCompleted);
            }
            this.InvokeAsync("SetDocumentType", new object[] {
                        docType,
                        overrideDbConnectionString,
                        overrideEnumDbDatabase}, this.SetDocumentTypeOperationCompleted, userState);
        }
        
        private void OnSetDocumentTypeOperationCompleted(object arg) {
            if ((this.SetDocumentTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDocumentTypeCompleted(this, new SetDocumentTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/PrepareTemplateForSigning", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo PrepareTemplateForSigning(string docType, string overrideEnumDbDatabase, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] ref byte[] template) {
            object[] results = this.Invoke("PrepareTemplateForSigning", new object[] {
                        docType,
                        overrideEnumDbDatabase,
                        template});
            template = ((byte[])(results[1]));
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void PrepareTemplateForSigningAsync(string docType, string overrideEnumDbDatabase, byte[] template) {
            this.PrepareTemplateForSigningAsync(docType, overrideEnumDbDatabase, template, null);
        }
        
        /// <remarks/>
        public void PrepareTemplateForSigningAsync(string docType, string overrideEnumDbDatabase, byte[] template, object userState) {
            if ((this.PrepareTemplateForSigningOperationCompleted == null)) {
                this.PrepareTemplateForSigningOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrepareTemplateForSigningOperationCompleted);
            }
            this.InvokeAsync("PrepareTemplateForSigning", new object[] {
                        docType,
                        overrideEnumDbDatabase,
                        template}, this.PrepareTemplateForSigningOperationCompleted, userState);
        }
        
        private void OnPrepareTemplateForSigningOperationCompleted(object arg) {
            if ((this.PrepareTemplateForSigningCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrepareTemplateForSigningCompleted(this, new PrepareTemplateForSigningCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/SetDocumentTypeMapping", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo SetDocumentTypeMapping(string docTypeName, NodeMapInfo mappingInfo) {
            object[] results = this.Invoke("SetDocumentTypeMapping", new object[] {
                        docTypeName,
                        mappingInfo});
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void SetDocumentTypeMappingAsync(string docTypeName, NodeMapInfo mappingInfo) {
            this.SetDocumentTypeMappingAsync(docTypeName, mappingInfo, null);
        }
        
        /// <remarks/>
        public void SetDocumentTypeMappingAsync(string docTypeName, NodeMapInfo mappingInfo, object userState) {
            if ((this.SetDocumentTypeMappingOperationCompleted == null)) {
                this.SetDocumentTypeMappingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDocumentTypeMappingOperationCompleted);
            }
            this.InvokeAsync("SetDocumentTypeMapping", new object[] {
                        docTypeName,
                        mappingInfo}, this.SetDocumentTypeMappingOperationCompleted, userState);
        }
        
        private void OnSetDocumentTypeMappingOperationCompleted(object arg) {
            if ((this.SetDocumentTypeMappingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDocumentTypeMappingCompleted(this, new SetDocumentTypeMappingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/RemoveDocumentType", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo RemoveDocumentType(string docTypeName) {
            object[] results = this.Invoke("RemoveDocumentType", new object[] {
                        docTypeName});
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveDocumentTypeAsync(string docTypeName) {
            this.RemoveDocumentTypeAsync(docTypeName, null);
        }
        
        /// <remarks/>
        public void RemoveDocumentTypeAsync(string docTypeName, object userState) {
            if ((this.RemoveDocumentTypeOperationCompleted == null)) {
                this.RemoveDocumentTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveDocumentTypeOperationCompleted);
            }
            this.InvokeAsync("RemoveDocumentType", new object[] {
                        docTypeName}, this.RemoveDocumentTypeOperationCompleted, userState);
        }
        
        private void OnRemoveDocumentTypeOperationCompleted(object arg) {
            if ((this.RemoveDocumentTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveDocumentTypeCompleted(this, new RemoveDocumentTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/GetDocumentsByType", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo GetDocumentsByType(string docTypeName, out DocumentInfo[] docInfos) {
            object[] results = this.Invoke("GetDocumentsByType", new object[] {
                        docTypeName});
            docInfos = ((DocumentInfo[])(results[1]));
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentsByTypeAsync(string docTypeName) {
            this.GetDocumentsByTypeAsync(docTypeName, null);
        }
        
        /// <remarks/>
        public void GetDocumentsByTypeAsync(string docTypeName, object userState) {
            if ((this.GetDocumentsByTypeOperationCompleted == null)) {
                this.GetDocumentsByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentsByTypeOperationCompleted);
            }
            this.InvokeAsync("GetDocumentsByType", new object[] {
                        docTypeName}, this.GetDocumentsByTypeOperationCompleted, userState);
        }
        
        private void OnGetDocumentsByTypeOperationCompleted(object arg) {
            if ((this.GetDocumentsByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentsByTypeCompleted(this, new GetDocumentsByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/GetMyDocumentsByType", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo GetMyDocumentsByType(string docTypeName, out DocumentInfo[] docInfos) {
            object[] results = this.Invoke("GetMyDocumentsByType", new object[] {
                        docTypeName});
            docInfos = ((DocumentInfo[])(results[1]));
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyDocumentsByTypeAsync(string docTypeName) {
            this.GetMyDocumentsByTypeAsync(docTypeName, null);
        }
        
        /// <remarks/>
        public void GetMyDocumentsByTypeAsync(string docTypeName, object userState) {
            if ((this.GetMyDocumentsByTypeOperationCompleted == null)) {
                this.GetMyDocumentsByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyDocumentsByTypeOperationCompleted);
            }
            this.InvokeAsync("GetMyDocumentsByType", new object[] {
                        docTypeName}, this.GetMyDocumentsByTypeOperationCompleted, userState);
        }
        
        private void OnGetMyDocumentsByTypeOperationCompleted(object arg) {
            if ((this.GetMyDocumentsByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyDocumentsByTypeCompleted(this, new GetMyDocumentsByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/GetDocumentSummaryByType", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo GetDocumentSummaryByType(string docTypeName, int[] docIds, string xpathFilter, out DocumentSummaryInfo[] docInfos) {
            object[] results = this.Invoke("GetDocumentSummaryByType", new object[] {
                        docTypeName,
                        docIds,
                        xpathFilter});
            docInfos = ((DocumentSummaryInfo[])(results[1]));
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentSummaryByTypeAsync(string docTypeName, int[] docIds, string xpathFilter) {
            this.GetDocumentSummaryByTypeAsync(docTypeName, docIds, xpathFilter, null);
        }
        
        /// <remarks/>
        public void GetDocumentSummaryByTypeAsync(string docTypeName, int[] docIds, string xpathFilter, object userState) {
            if ((this.GetDocumentSummaryByTypeOperationCompleted == null)) {
                this.GetDocumentSummaryByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentSummaryByTypeOperationCompleted);
            }
            this.InvokeAsync("GetDocumentSummaryByType", new object[] {
                        docTypeName,
                        docIds,
                        xpathFilter}, this.GetDocumentSummaryByTypeOperationCompleted, userState);
        }
        
        private void OnGetDocumentSummaryByTypeOperationCompleted(object arg) {
            if ((this.GetDocumentSummaryByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentSummaryByTypeCompleted(this, new GetDocumentSummaryByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/GetMyDocumentSummaryByType", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo GetMyDocumentSummaryByType(string docTypeName, out DocumentSummaryInfo[] docInfos) {
            object[] results = this.Invoke("GetMyDocumentSummaryByType", new object[] {
                        docTypeName});
            docInfos = ((DocumentSummaryInfo[])(results[1]));
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyDocumentSummaryByTypeAsync(string docTypeName) {
            this.GetMyDocumentSummaryByTypeAsync(docTypeName, null);
        }
        
        /// <remarks/>
        public void GetMyDocumentSummaryByTypeAsync(string docTypeName, object userState) {
            if ((this.GetMyDocumentSummaryByTypeOperationCompleted == null)) {
                this.GetMyDocumentSummaryByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyDocumentSummaryByTypeOperationCompleted);
            }
            this.InvokeAsync("GetMyDocumentSummaryByType", new object[] {
                        docTypeName}, this.GetMyDocumentSummaryByTypeOperationCompleted, userState);
        }
        
        private void OnGetMyDocumentSummaryByTypeOperationCompleted(object arg) {
            if ((this.GetMyDocumentSummaryByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyDocumentSummaryByTypeCompleted(this, new GetMyDocumentSummaryByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/GetListItems", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetListItemsResponse", Namespace="http://qdabra.com/webservices/", IsNullable=true)]
        public GetListItemsResponse GetListItems([System.Xml.Serialization.XmlElementAttribute("GetListItems", Namespace="http://qdabra.com/webservices/")] GetListItems GetListItems1) {
            object[] results = this.Invoke("GetListItems", new object[] {
                        GetListItems1});
            return ((GetListItemsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetListItemsAsync(GetListItems GetListItems1) {
            this.GetListItemsAsync(GetListItems1, null);
        }
        
        /// <remarks/>
        public void GetListItemsAsync(GetListItems GetListItems1, object userState) {
            if ((this.GetListItemsOperationCompleted == null)) {
                this.GetListItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListItemsOperationCompleted);
            }
            this.InvokeAsync("GetListItems", new object[] {
                        GetListItems1}, this.GetListItemsOperationCompleted, userState);
        }
        
        private void OnGetListItemsOperationCompleted(object arg) {
            if ((this.GetListItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListItemsCompleted(this, new GetListItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/GetMyListItems", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetMyListItemsResponse", Namespace="http://qdabra.com/webservices/", IsNullable=true)]
        public GetMyListItemsResponse GetMyListItems([System.Xml.Serialization.XmlElementAttribute("GetMyListItems", Namespace="http://qdabra.com/webservices/")] GetMyListItems GetMyListItems1) {
            object[] results = this.Invoke("GetMyListItems", new object[] {
                        GetMyListItems1});
            return ((GetMyListItemsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyListItemsAsync(GetMyListItems GetMyListItems1) {
            this.GetMyListItemsAsync(GetMyListItems1, null);
        }
        
        /// <remarks/>
        public void GetMyListItemsAsync(GetMyListItems GetMyListItems1, object userState) {
            if ((this.GetMyListItemsOperationCompleted == null)) {
                this.GetMyListItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyListItemsOperationCompleted);
            }
            this.InvokeAsync("GetMyListItems", new object[] {
                        GetMyListItems1}, this.GetMyListItemsOperationCompleted, userState);
        }
        
        private void OnGetMyListItemsOperationCompleted(object arg) {
            if ((this.GetMyListItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyListItemsCompleted(this, new GetMyListItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/QueryDocuments", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo QueryDocuments(string docTypeName, string xpath, IndexQueryInfo queryInfo, out DocumentInfo[] docInfos) {
            object[] results = this.Invoke("QueryDocuments", new object[] {
                        docTypeName,
                        xpath,
                        queryInfo});
            docInfos = ((DocumentInfo[])(results[1]));
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDocumentsAsync(string docTypeName, string xpath, IndexQueryInfo queryInfo) {
            this.QueryDocumentsAsync(docTypeName, xpath, queryInfo, null);
        }
        
        /// <remarks/>
        public void QueryDocumentsAsync(string docTypeName, string xpath, IndexQueryInfo queryInfo, object userState) {
            if ((this.QueryDocumentsOperationCompleted == null)) {
                this.QueryDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDocumentsOperationCompleted);
            }
            this.InvokeAsync("QueryDocuments", new object[] {
                        docTypeName,
                        xpath,
                        queryInfo}, this.QueryDocumentsOperationCompleted, userState);
        }
        
        private void OnQueryDocumentsOperationCompleted(object arg) {
            if ((this.QueryDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDocumentsCompleted(this, new QueryDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/QueryDocumentsHistory", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo QueryDocumentsHistory(string docTypeName, string xpath, out DocumentInfo[] docInfos) {
            object[] results = this.Invoke("QueryDocumentsHistory", new object[] {
                        docTypeName,
                        xpath});
            docInfos = ((DocumentInfo[])(results[1]));
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDocumentsHistoryAsync(string docTypeName, string xpath) {
            this.QueryDocumentsHistoryAsync(docTypeName, xpath, null);
        }
        
        /// <remarks/>
        public void QueryDocumentsHistoryAsync(string docTypeName, string xpath, object userState) {
            if ((this.QueryDocumentsHistoryOperationCompleted == null)) {
                this.QueryDocumentsHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDocumentsHistoryOperationCompleted);
            }
            this.InvokeAsync("QueryDocumentsHistory", new object[] {
                        docTypeName,
                        xpath}, this.QueryDocumentsHistoryOperationCompleted, userState);
        }
        
        private void OnQueryDocumentsHistoryOperationCompleted(object arg) {
            if ((this.QueryDocumentsHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDocumentsHistoryCompleted(this, new QueryDocumentsHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/Search", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo Search(string searchPhrase, SearchType searchType, string docType, out DocumentSummaryInfo[] docInfos) {
            object[] results = this.Invoke("Search", new object[] {
                        searchPhrase,
                        searchType,
                        docType});
            docInfos = ((DocumentSummaryInfo[])(results[1]));
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void SearchAsync(string searchPhrase, SearchType searchType, string docType) {
            this.SearchAsync(searchPhrase, searchType, docType, null);
        }
        
        /// <remarks/>
        public void SearchAsync(string searchPhrase, SearchType searchType, string docType, object userState) {
            if ((this.SearchOperationCompleted == null)) {
                this.SearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchOperationCompleted);
            }
            this.InvokeAsync("Search", new object[] {
                        searchPhrase,
                        searchType,
                        docType}, this.SearchOperationCompleted, userState);
        }
        
        private void OnSearchOperationCompleted(object arg) {
            if ((this.SearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchCompleted(this, new SearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/SearchEx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("SearchExResponse", Namespace="http://qdabra.com/webservices/", IsNullable=true)]
        public SearchExResponse SearchEx([System.Xml.Serialization.XmlElementAttribute("SearchEx", Namespace="http://qdabra.com/webservices/")] SearchEx SearchEx1) {
            object[] results = this.Invoke("SearchEx", new object[] {
                        SearchEx1});
            return ((SearchExResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SearchExAsync(SearchEx SearchEx1) {
            this.SearchExAsync(SearchEx1, null);
        }
        
        /// <remarks/>
        public void SearchExAsync(SearchEx SearchEx1, object userState) {
            if ((this.SearchExOperationCompleted == null)) {
                this.SearchExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchExOperationCompleted);
            }
            this.InvokeAsync("SearchEx", new object[] {
                        SearchEx1}, this.SearchExOperationCompleted, userState);
        }
        
        private void OnSearchExOperationCompleted(object arg) {
            if ((this.SearchExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchExCompleted(this, new SearchExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/ChangeDocumentTypeOfDocument", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo ChangeDocumentTypeOfDocument(int docId, string oldDocType, string newDocType) {
            object[] results = this.Invoke("ChangeDocumentTypeOfDocument", new object[] {
                        docId,
                        oldDocType,
                        newDocType});
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeDocumentTypeOfDocumentAsync(int docId, string oldDocType, string newDocType) {
            this.ChangeDocumentTypeOfDocumentAsync(docId, oldDocType, newDocType, null);
        }
        
        /// <remarks/>
        public void ChangeDocumentTypeOfDocumentAsync(int docId, string oldDocType, string newDocType, object userState) {
            if ((this.ChangeDocumentTypeOfDocumentOperationCompleted == null)) {
                this.ChangeDocumentTypeOfDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeDocumentTypeOfDocumentOperationCompleted);
            }
            this.InvokeAsync("ChangeDocumentTypeOfDocument", new object[] {
                        docId,
                        oldDocType,
                        newDocType}, this.ChangeDocumentTypeOfDocumentOperationCompleted, userState);
        }
        
        private void OnChangeDocumentTypeOfDocumentOperationCompleted(object arg) {
            if ((this.ChangeDocumentTypeOfDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeDocumentTypeOfDocumentCompleted(this, new ChangeDocumentTypeOfDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/GetDocumentTypeId", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo GetDocumentTypeId(string documentTypeName, string domain, out int documentTypeId) {
            object[] results = this.Invoke("GetDocumentTypeId", new object[] {
                        documentTypeName,
                        domain});
            documentTypeId = ((int)(results[1]));
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentTypeIdAsync(string documentTypeName, string domain) {
            this.GetDocumentTypeIdAsync(documentTypeName, domain, null);
        }
        
        /// <remarks/>
        public void GetDocumentTypeIdAsync(string documentTypeName, string domain, object userState) {
            if ((this.GetDocumentTypeIdOperationCompleted == null)) {
                this.GetDocumentTypeIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentTypeIdOperationCompleted);
            }
            this.InvokeAsync("GetDocumentTypeId", new object[] {
                        documentTypeName,
                        domain}, this.GetDocumentTypeIdOperationCompleted, userState);
        }
        
        private void OnGetDocumentTypeIdOperationCompleted(object arg) {
            if ((this.GetDocumentTypeIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentTypeIdCompleted(this, new GetDocumentTypeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/GetDocumentTypePermissionInfo", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo GetDocumentTypePermissionInfo(string documentType, out DocumentTypePermissionInfo[] permissionInfo) {
            object[] results = this.Invoke("GetDocumentTypePermissionInfo", new object[] {
                        documentType});
            permissionInfo = ((DocumentTypePermissionInfo[])(results[1]));
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentTypePermissionInfoAsync(string documentType) {
            this.GetDocumentTypePermissionInfoAsync(documentType, null);
        }
        
        /// <remarks/>
        public void GetDocumentTypePermissionInfoAsync(string documentType, object userState) {
            if ((this.GetDocumentTypePermissionInfoOperationCompleted == null)) {
                this.GetDocumentTypePermissionInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentTypePermissionInfoOperationCompleted);
            }
            this.InvokeAsync("GetDocumentTypePermissionInfo", new object[] {
                        documentType}, this.GetDocumentTypePermissionInfoOperationCompleted, userState);
        }
        
        private void OnGetDocumentTypePermissionInfoOperationCompleted(object arg) {
            if ((this.GetDocumentTypePermissionInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentTypePermissionInfoCompleted(this, new GetDocumentTypePermissionInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/SubmitDocumentWithKey", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo SubmitDocumentWithKey(string xml, string documentType, string key, string clientDateTime, string name, string author, string description, out int docId, out string refId) {
            object[] results = this.Invoke("SubmitDocumentWithKey", new object[] {
                        xml,
                        documentType,
                        key,
                        clientDateTime,
                        name,
                        author,
                        description});
            docId = ((int)(results[1]));
            refId = ((string)(results[2]));
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitDocumentWithKeyAsync(string xml, string documentType, string key, string clientDateTime, string name, string author, string description) {
            this.SubmitDocumentWithKeyAsync(xml, documentType, key, clientDateTime, name, author, description, null);
        }
        
        /// <remarks/>
        public void SubmitDocumentWithKeyAsync(string xml, string documentType, string key, string clientDateTime, string name, string author, string description, object userState) {
            if ((this.SubmitDocumentWithKeyOperationCompleted == null)) {
                this.SubmitDocumentWithKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitDocumentWithKeyOperationCompleted);
            }
            this.InvokeAsync("SubmitDocumentWithKey", new object[] {
                        xml,
                        documentType,
                        key,
                        clientDateTime,
                        name,
                        author,
                        description}, this.SubmitDocumentWithKeyOperationCompleted, userState);
        }
        
        private void OnSubmitDocumentWithKeyOperationCompleted(object arg) {
            if ((this.SubmitDocumentWithKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitDocumentWithKeyCompleted(this, new SubmitDocumentWithKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/SubmitDocumentWithKeyAsUser", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo SubmitDocumentWithKeyAsUser(string submitAsUser, string xml, string documentType, string key, string clientDateTime, string name, string author, string description, out int docId, out string refId) {
            object[] results = this.Invoke("SubmitDocumentWithKeyAsUser", new object[] {
                        submitAsUser,
                        xml,
                        documentType,
                        key,
                        clientDateTime,
                        name,
                        author,
                        description});
            docId = ((int)(results[1]));
            refId = ((string)(results[2]));
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitDocumentWithKeyAsUserAsync(string submitAsUser, string xml, string documentType, string key, string clientDateTime, string name, string author, string description) {
            this.SubmitDocumentWithKeyAsUserAsync(submitAsUser, xml, documentType, key, clientDateTime, name, author, description, null);
        }
        
        /// <remarks/>
        public void SubmitDocumentWithKeyAsUserAsync(string submitAsUser, string xml, string documentType, string key, string clientDateTime, string name, string author, string description, object userState) {
            if ((this.SubmitDocumentWithKeyAsUserOperationCompleted == null)) {
                this.SubmitDocumentWithKeyAsUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitDocumentWithKeyAsUserOperationCompleted);
            }
            this.InvokeAsync("SubmitDocumentWithKeyAsUser", new object[] {
                        submitAsUser,
                        xml,
                        documentType,
                        key,
                        clientDateTime,
                        name,
                        author,
                        description}, this.SubmitDocumentWithKeyAsUserOperationCompleted, userState);
        }
        
        private void OnSubmitDocumentWithKeyAsUserOperationCompleted(object arg) {
            if ((this.SubmitDocumentWithKeyAsUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitDocumentWithKeyAsUserCompleted(this, new SubmitDocumentWithKeyAsUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/QueryDocumentWithKey", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo QueryDocumentWithKey(string key, out DocumentKeyDetails details) {
            object[] results = this.Invoke("QueryDocumentWithKey", new object[] {
                        key});
            details = ((DocumentKeyDetails)(results[1]));
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDocumentWithKeyAsync(string key) {
            this.QueryDocumentWithKeyAsync(key, null);
        }
        
        /// <remarks/>
        public void QueryDocumentWithKeyAsync(string key, object userState) {
            if ((this.QueryDocumentWithKeyOperationCompleted == null)) {
                this.QueryDocumentWithKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDocumentWithKeyOperationCompleted);
            }
            this.InvokeAsync("QueryDocumentWithKey", new object[] {
                        key}, this.QueryDocumentWithKeyOperationCompleted, userState);
        }
        
        private void OnQueryDocumentWithKeyOperationCompleted(object arg) {
            if ((this.QueryDocumentWithKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDocumentWithKeyCompleted(this, new QueryDocumentWithKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qdabra.com/webservices/QueryDocumentsNodeSet", RequestNamespace="http://qdabra.com/webservices/", ResponseNamespace="http://qdabra.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInfo QueryDocumentsNodeSet(string query, out System.Xml.XmlNode result) {
            object[] results = this.Invoke("QueryDocumentsNodeSet", new object[] {
                        query});
            result = ((System.Xml.XmlNode)(results[1]));
            return ((StatusInfo)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDocumentsNodeSetAsync(string query) {
            this.QueryDocumentsNodeSetAsync(query, null);
        }
        
        /// <remarks/>
        public void QueryDocumentsNodeSetAsync(string query, object userState) {
            if ((this.QueryDocumentsNodeSetOperationCompleted == null)) {
                this.QueryDocumentsNodeSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDocumentsNodeSetOperationCompleted);
            }
            this.InvokeAsync("QueryDocumentsNodeSet", new object[] {
                        query}, this.QueryDocumentsNodeSetOperationCompleted, userState);
        }
        
        private void OnQueryDocumentsNodeSetOperationCompleted(object arg) {
            if ((this.QueryDocumentsNodeSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDocumentsNodeSetCompleted(this, new QueryDocumentsNodeSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    // CODEGEN: No methods were found in the WSDL for this protocol.
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DbxlDocumentServiceSoap", Namespace="http://qdabra.com/webservices/")]
    public partial class DbxlDocumentServiceSoap : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DbxlDocumentServiceSoap() {
            this.Url = global::DbxlEventReceiverWeb.Properties.Settings.Default.DbxlEventReceiverWeb_DbxlNet_DbxlDocumentService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qdabra.com/webservices/")]
    public partial class StatusInfo {
        
        private bool successField;
        
        private ErrorInfo[] errorsField;
        
        private string executionTimeField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public ErrorInfo[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        public string ExecutionTime {
            get {
                return this.executionTimeField;
            }
            set {
                this.executionTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qdabra.com/webservices/")]
    public partial class ErrorInfo {
        
        private string codeField;
        
        private string descriptionField;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qdabra.com/webservices/")]
    public partial class DocumentKeyDetails {
        
        private int docIdField;
        
        private System.DateTime clientDateTimeField;
        
        private string lastModifiedByField;
        
        private System.DateTime lastModifiedField;
        
        private bool lockedField;
        
        private string lockedByField;
        
        private int versionField;
        
        /// <remarks/>
        public int DocId {
            get {
                return this.docIdField;
            }
            set {
                this.docIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ClientDateTime {
            get {
                return this.clientDateTimeField;
            }
            set {
                this.clientDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string LastModifiedBy {
            get {
                return this.lastModifiedByField;
            }
            set {
                this.lastModifiedByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastModified {
            get {
                return this.lastModifiedField;
            }
            set {
                this.lastModifiedField = value;
            }
        }
        
        /// <remarks/>
        public bool Locked {
            get {
                return this.lockedField;
            }
            set {
                this.lockedField = value;
            }
        }
        
        /// <remarks/>
        public string LockedBy {
            get {
                return this.lockedByField;
            }
            set {
                this.lockedByField = value;
            }
        }
        
        /// <remarks/>
        public int Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qdabra.com/webservices/")]
    public partial class SearchExResponse {
        
        private System.Xml.XmlNode listitemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/", IsNullable=true)]
        public System.Xml.XmlNode listitems {
            get {
                return this.listitemsField;
            }
            set {
                this.listitemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qdabra.com/webservices/")]
    public partial class IndexCompareInfo {
        
        private string indexNameField;
        
        private System.Nullable<Operand> operandField;
        
        private string valueField;
        
        /// <remarks/>
        public string IndexName {
            get {
                return this.indexNameField;
            }
            set {
                this.indexNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<Operand> Operand {
            get {
                return this.operandField;
            }
            set {
                this.operandField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qdabra.com/webservices/")]
    public enum Operand {
        
        /// <remarks/>
        LT,
        
        /// <remarks/>
        LTE,
        
        /// <remarks/>
        EQ,
        
        /// <remarks/>
        GTE,
        
        /// <remarks/>
        GT,
        
        /// <remarks/>
        NE,
        
        /// <remarks/>
        Like,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qdabra.com/webservices/")]
    public partial class IndexQueryInfo {
        
        private IndexCompareInfo[] compareListField;
        
        /// <remarks/>
        public IndexCompareInfo[] CompareList {
            get {
                return this.compareListField;
            }
            set {
                this.compareListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qdabra.com/webservices/")]
    public partial class GetMyListItemsResponse {
        
        private System.Xml.XmlNode listitemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/", IsNullable=true)]
        public System.Xml.XmlNode listitems {
            get {
                return this.listitemsField;
            }
            set {
                this.listitemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qdabra.com/webservices/")]
    public partial class GetListItemsResponse {
        
        private System.Xml.XmlNode listitemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/", IsNullable=true)]
        public System.Xml.XmlNode listitems {
            get {
                return this.listitemsField;
            }
            set {
                this.listitemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qdabra.com/webservices/")]
    public partial class DocumentSummaryInfo {
        
        private int docIDField;
        
        private int versionNoField;
        
        private string refIDField;
        
        private bool isLockedField;
        
        private string lockedByField;
        
        private System.DateTime lockExpiresField;
        
        private string lockCommentsField;
        
        private string nameField;
        
        private string authorField;
        
        private string descriptionField;
        
        private DocumentPropertyInfo[] propertiesField;
        
        private string linkField;
        
        private string createdByField;
        
        private System.DateTime createdField;
        
        private string modifiedByField;
        
        private System.DateTime modifiedField;
        
        private string submitKeyField;
        
        /// <remarks/>
        public int DocID {
            get {
                return this.docIDField;
            }
            set {
                this.docIDField = value;
            }
        }
        
        /// <remarks/>
        public int VersionNo {
            get {
                return this.versionNoField;
            }
            set {
                this.versionNoField = value;
            }
        }
        
        /// <remarks/>
        public string RefID {
            get {
                return this.refIDField;
            }
            set {
                this.refIDField = value;
            }
        }
        
        /// <remarks/>
        public bool IsLocked {
            get {
                return this.isLockedField;
            }
            set {
                this.isLockedField = value;
            }
        }
        
        /// <remarks/>
        public string LockedBy {
            get {
                return this.lockedByField;
            }
            set {
                this.lockedByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LockExpires {
            get {
                return this.lockExpiresField;
            }
            set {
                this.lockExpiresField = value;
            }
        }
        
        /// <remarks/>
        public string LockComments {
            get {
                return this.lockCommentsField;
            }
            set {
                this.lockCommentsField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public DocumentPropertyInfo[] Properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
            }
        }
        
        /// <remarks/>
        public string Link {
            get {
                return this.linkField;
            }
            set {
                this.linkField = value;
            }
        }
        
        /// <remarks/>
        public string CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public string ModifiedBy {
            get {
                return this.modifiedByField;
            }
            set {
                this.modifiedByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SubmitKey {
            get {
                return this.submitKeyField;
            }
            set {
                this.submitKeyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qdabra.com/webservices/")]
    public partial class DocumentPropertyInfo {
        
        private string nameField;
        
        private string columnNameField;
        
        private string valueField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string ColumnName {
            get {
                return this.columnNameField;
            }
            set {
                this.columnNameField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qdabra.com/webservices/")]
    public partial class DocumentTypeSummaryInfo {
        
        private string nameField;
        
        private int documentCountField;
        
        private int maxDocumentCountField;
        
        private int maxDocumentTypeCountField;
        
        private string linkField;
        
        private System.DateTime templateModifiedDateField;
        
        private string templateFormVersionField;
        
        private string lastModifiedByField;
        
        private string solutionGroupField;
        
        private string descriptionField;
        
        private bool historyFlgField;
        
        private NamespaceInfo[] namespacesField;
        
        private DocumentIndexInfo[] indexesField;
        
        private DocumentTypePropertyInfo[] propertiesField;
        
        private int idField;
        
        private System.Nullable<int> iconIdField;
        
        private string friendlyNameField;
        
        private System.Nullable<int> domainIdField;
        
        private bool isSystemDocumentTypeField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int DocumentCount {
            get {
                return this.documentCountField;
            }
            set {
                this.documentCountField = value;
            }
        }
        
        /// <remarks/>
        public int MaxDocumentCount {
            get {
                return this.maxDocumentCountField;
            }
            set {
                this.maxDocumentCountField = value;
            }
        }
        
        /// <remarks/>
        public int MaxDocumentTypeCount {
            get {
                return this.maxDocumentTypeCountField;
            }
            set {
                this.maxDocumentTypeCountField = value;
            }
        }
        
        /// <remarks/>
        public string Link {
            get {
                return this.linkField;
            }
            set {
                this.linkField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TemplateModifiedDate {
            get {
                return this.templateModifiedDateField;
            }
            set {
                this.templateModifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public string TemplateFormVersion {
            get {
                return this.templateFormVersionField;
            }
            set {
                this.templateFormVersionField = value;
            }
        }
        
        /// <remarks/>
        public string LastModifiedBy {
            get {
                return this.lastModifiedByField;
            }
            set {
                this.lastModifiedByField = value;
            }
        }
        
        /// <remarks/>
        public string SolutionGroup {
            get {
                return this.solutionGroupField;
            }
            set {
                this.solutionGroupField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool HistoryFlg {
            get {
                return this.historyFlgField;
            }
            set {
                this.historyFlgField = value;
            }
        }
        
        /// <remarks/>
        public NamespaceInfo[] Namespaces {
            get {
                return this.namespacesField;
            }
            set {
                this.namespacesField = value;
            }
        }
        
        /// <remarks/>
        public DocumentIndexInfo[] Indexes {
            get {
                return this.indexesField;
            }
            set {
                this.indexesField = value;
            }
        }
        
        /// <remarks/>
        public DocumentTypePropertyInfo[] Properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
            }
        }
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> IconId {
            get {
                return this.iconIdField;
            }
            set {
                this.iconIdField = value;
            }
        }
        
        /// <remarks/>
        public string FriendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> DomainId {
            get {
                return this.domainIdField;
            }
            set {
                this.domainIdField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSystemDocumentType {
            get {
                return this.isSystemDocumentTypeField;
            }
            set {
                this.isSystemDocumentTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qdabra.com/webservices/")]
    public partial class NamespaceInfo {
        
        private int namespaceIDField;
        
        private string uriField;
        
        private string prefixField;
        
        /// <remarks/>
        public int NamespaceID {
            get {
                return this.namespaceIDField;
            }
            set {
                this.namespaceIDField = value;
            }
        }
        
        /// <remarks/>
        public string Uri {
            get {
                return this.uriField;
            }
            set {
                this.uriField = value;
            }
        }
        
        /// <remarks/>
        public string Prefix {
            get {
                return this.prefixField;
            }
            set {
                this.prefixField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qdabra.com/webservices/")]
    public partial class DocumentIndexInfo {
        
        private int indexIDField;
        
        private string nameField;
        
        private string xPathField;
        
        /// <remarks/>
        public int IndexID {
            get {
                return this.indexIDField;
            }
            set {
                this.indexIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string XPath {
            get {
                return this.xPathField;
            }
            set {
                this.xPathField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qdabra.com/webservices/")]
    public partial class DocumentTypePropertyInfo {
        
        private int propertyIDField;
        
        private string nameField;
        
        private string columnNameField;
        
        private string xPathField;
        
        private ColumnType columnTypeField;
        
        private string aggregationField;
        
        /// <remarks/>
        public int PropertyID {
            get {
                return this.propertyIDField;
            }
            set {
                this.propertyIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string ColumnName {
            get {
                return this.columnNameField;
            }
            set {
                this.columnNameField = value;
            }
        }
        
        /// <remarks/>
        public string XPath {
            get {
                return this.xPathField;
            }
            set {
                this.xPathField = value;
            }
        }
        
        /// <remarks/>
        public ColumnType ColumnType {
            get {
                return this.columnTypeField;
            }
            set {
                this.columnTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Aggregation {
            get {
                return this.aggregationField;
            }
            set {
                this.aggregationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qdabra.com/webservices/")]
    public enum ColumnType {
        
        /// <remarks/>
        Undefined,
        
        /// <remarks/>
        integer,
        
        /// <remarks/>
        @float,
        
        /// <remarks/>
        date,
        
        /// <remarks/>
        time,
        
        /// <remarks/>
        dateTime,
        
        /// <remarks/>
        @decimal,
        
        /// <remarks/>
        @string,
        
        /// <remarks/>
        boolean,
        
        /// <remarks/>
        @byte,
        
        /// <remarks/>
        @long,
        
        /// <remarks/>
        @short,
        
        /// <remarks/>
        @double,
        
        /// <remarks/>
        hexBinary,
        
        /// <remarks/>
        base64binary,
        
        /// <remarks/>
        duration,
        
        /// <remarks/>
        nonNegativeInteger,
        
        /// <remarks/>
        positiveInteger,
        
        /// <remarks/>
        nonPositiveInteger,
        
        /// <remarks/>
        negativeInteger,
        
        /// <remarks/>
        unsignedByte,
        
        /// <remarks/>
        unsignedInt,
        
        /// <remarks/>
        unsignedLong,
        
        /// <remarks/>
        unsignedShort,
        
        /// <remarks/>
        gYearMonth,
        
        /// <remarks/>
        gMonthDay,
        
        /// <remarks/>
        gDay,
        
        /// <remarks/>
        gMonth,
        
        /// <remarks/>
        anyURI,
        
        /// <remarks/>
        Object,
        
        /// <remarks/>
        Int,
        
        /// <remarks/>
        Float,
        
        /// <remarks/>
        Date,
        
        /// <remarks/>
        Time,
        
        /// <remarks/>
        DateTime,
        
        /// <remarks/>
        Currency,
        
        /// <remarks/>
        String,
        
        /// <remarks/>
        Boolean,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qdabra.com/webservices/")]
    public partial class ListOptions {
        
        private bool verifyFormLibraryUrlField;
        
        private bool ensureFormLibraryField;
        
        private bool enableForIPFSField;
        
        private bool enableDeletePropagationField;
        
        private bool isContentTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool VerifyFormLibraryUrl {
            get {
                return this.verifyFormLibraryUrlField;
            }
            set {
                this.verifyFormLibraryUrlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool EnsureFormLibrary {
            get {
                return this.ensureFormLibraryField;
            }
            set {
                this.ensureFormLibraryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool EnableForIPFS {
            get {
                return this.enableForIPFSField;
            }
            set {
                this.enableForIPFSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool EnableDeletePropagation {
            get {
                return this.enableDeletePropagationField;
            }
            set {
                this.enableDeletePropagationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsContentType {
            get {
                return this.isContentTypeField;
            }
            set {
                this.isContentTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qdabra.com/webservices/")]
    public partial class SharePointListMapConditionInfo {
        
        private string expressionField;
        
        /// <remarks/>
        public string Expression {
            get {
                return this.expressionField;
            }
            set {
                this.expressionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qdabra.com/webservices/")]
    public partial class SharePointListMapInfo {
        
        private string idField;
        
        private int sequenceNumberField;
        
        private string sharePointListUrlField;
        
        private int methodField;
        
        private int timeframeField;
        
        private int authTypeField;
        
        private string sSOAppNameField;
        
        private int conjunctionField;
        
        private SharePointListMapConditionInfo[] conditionsField;
        
        private ListOptions optionsField;
        
        private string contentTypeUrlField;
        
        private string listTypeField;
        
        private string fileXPathField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int SequenceNumber {
            get {
                return this.sequenceNumberField;
            }
            set {
                this.sequenceNumberField = value;
            }
        }
        
        /// <remarks/>
        public string SharePointListUrl {
            get {
                return this.sharePointListUrlField;
            }
            set {
                this.sharePointListUrlField = value;
            }
        }
        
        /// <remarks/>
        public int Method {
            get {
                return this.methodField;
            }
            set {
                this.methodField = value;
            }
        }
        
        /// <remarks/>
        public int Timeframe {
            get {
                return this.timeframeField;
            }
            set {
                this.timeframeField = value;
            }
        }
        
        /// <remarks/>
        public int AuthType {
            get {
                return this.authTypeField;
            }
            set {
                this.authTypeField = value;
            }
        }
        
        /// <remarks/>
        public string SSOAppName {
            get {
                return this.sSOAppNameField;
            }
            set {
                this.sSOAppNameField = value;
            }
        }
        
        /// <remarks/>
        public int Conjunction {
            get {
                return this.conjunctionField;
            }
            set {
                this.conjunctionField = value;
            }
        }
        
        /// <remarks/>
        public SharePointListMapConditionInfo[] Conditions {
            get {
                return this.conditionsField;
            }
            set {
                this.conditionsField = value;
            }
        }
        
        /// <remarks/>
        public ListOptions Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
            }
        }
        
        /// <remarks/>
        public string ContentTypeUrl {
            get {
                return this.contentTypeUrlField;
            }
            set {
                this.contentTypeUrlField = value;
            }
        }
        
        /// <remarks/>
        public string ListType {
            get {
                return this.listTypeField;
            }
            set {
                this.listTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FileXPath {
            get {
                return this.fileXPathField;
            }
            set {
                this.fileXPathField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qdabra.com/webservices/")]
    public partial class DocumentTypePermissionInfo {
        
        private string nameField;
        
        private string membershipXPathField;
        
        private string roleNameField;
        
        private bool canReadField;
        
        private bool canWriteField;
        
        private bool canLockForReadField;
        
        private bool canLockForWriteField;
        
        private bool canAdministerField;
        
        private bool canAddField;
        
        private bool canDeleteField;
        
        private System.Nullable<PermissionLevels> permissionLevelField;
        
        private bool canBrowseField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string MembershipXPath {
            get {
                return this.membershipXPathField;
            }
            set {
                this.membershipXPathField = value;
            }
        }
        
        /// <remarks/>
        public string RoleName {
            get {
                return this.roleNameField;
            }
            set {
                this.roleNameField = value;
            }
        }
        
        /// <remarks/>
        public bool CanRead {
            get {
                return this.canReadField;
            }
            set {
                this.canReadField = value;
            }
        }
        
        /// <remarks/>
        public bool CanWrite {
            get {
                return this.canWriteField;
            }
            set {
                this.canWriteField = value;
            }
        }
        
        /// <remarks/>
        public bool CanLockForRead {
            get {
                return this.canLockForReadField;
            }
            set {
                this.canLockForReadField = value;
            }
        }
        
        /// <remarks/>
        public bool CanLockForWrite {
            get {
                return this.canLockForWriteField;
            }
            set {
                this.canLockForWriteField = value;
            }
        }
        
        /// <remarks/>
        public bool CanAdminister {
            get {
                return this.canAdministerField;
            }
            set {
                this.canAdministerField = value;
            }
        }
        
        /// <remarks/>
        public bool CanAdd {
            get {
                return this.canAddField;
            }
            set {
                this.canAddField = value;
            }
        }
        
        /// <remarks/>
        public bool CanDelete {
            get {
                return this.canDeleteField;
            }
            set {
                this.canDeleteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<PermissionLevels> PermissionLevel {
            get {
                return this.permissionLevelField;
            }
            set {
                this.permissionLevelField = value;
            }
        }
        
        /// <remarks/>
        public bool CanBrowse {
            get {
                return this.canBrowseField;
            }
            set {
                this.canBrowseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qdabra.com/webservices/")]
    public enum PermissionLevels {
        
        /// <remarks/>
        Type,
        
        /// <remarks/>
        Document,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qdabra.com/webservices/")]
    public partial class ForeignKeyInfo {
        
        private int keyIDField;
        
        private string objectNameField;
        
        private ForeignKeyType keyTypeField;
        
        private string foreignObjectNameField;
        
        /// <remarks/>
        public int KeyID {
            get {
                return this.keyIDField;
            }
            set {
                this.keyIDField = value;
            }
        }
        
        /// <remarks/>
        public string ObjectName {
            get {
                return this.objectNameField;
            }
            set {
                this.objectNameField = value;
            }
        }
        
        /// <remarks/>
        public ForeignKeyType KeyType {
            get {
                return this.keyTypeField;
            }
            set {
                this.keyTypeField = value;
            }
        }
        
        /// <remarks/>
        public string ForeignObjectName {
            get {
                return this.foreignObjectNameField;
            }
            set {
                this.foreignObjectNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qdabra.com/webservices/")]
    public enum ForeignKeyType {
        
        /// <remarks/>
        Column,
        
        /// <remarks/>
        Identity,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qdabra.com/webservices/")]
    public partial class NodeMapInfo {
        
        private bool isKeyField;
        
        private int nodeMapIDField;
        
        private string nodePathField;
        
        private NodeMapType typeField;
        
        private string valueTypeField;
        
        private string objectNameField;
        
        private bool promotedField;
        
        private ColumnType columnTypeField;
        
        private NodeMapInfo[] nodesField;
        
        private ForeignKeyInfo[] foreignKeysField;
        
        /// <remarks/>
        public bool IsKey {
            get {
                return this.isKeyField;
            }
            set {
                this.isKeyField = value;
            }
        }
        
        /// <remarks/>
        public int NodeMapID {
            get {
                return this.nodeMapIDField;
            }
            set {
                this.nodeMapIDField = value;
            }
        }
        
        /// <remarks/>
        public string NodePath {
            get {
                return this.nodePathField;
            }
            set {
                this.nodePathField = value;
            }
        }
        
        /// <remarks/>
        public NodeMapType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string ValueType {
            get {
                return this.valueTypeField;
            }
            set {
                this.valueTypeField = value;
            }
        }
        
        /// <remarks/>
        public string ObjectName {
            get {
                return this.objectNameField;
            }
            set {
                this.objectNameField = value;
            }
        }
        
        /// <remarks/>
        public bool Promoted {
            get {
                return this.promotedField;
            }
            set {
                this.promotedField = value;
            }
        }
        
        /// <remarks/>
        public ColumnType ColumnType {
            get {
                return this.columnTypeField;
            }
            set {
                this.columnTypeField = value;
            }
        }
        
        /// <remarks/>
        public NodeMapInfo[] Nodes {
            get {
                return this.nodesField;
            }
            set {
                this.nodesField = value;
            }
        }
        
        /// <remarks/>
        public ForeignKeyInfo[] ForeignKeys {
            get {
                return this.foreignKeysField;
            }
            set {
                this.foreignKeysField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qdabra.com/webservices/")]
    public enum NodeMapType {
        
        /// <remarks/>
        Table,
        
        /// <remarks/>
        Column,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qdabra.com/webservices/")]
    public partial class DocumentTypeInfo {
        
        private string nameField;
        
        private bool historyFlgField;
        
        private string refIdFormatField;
        
        private int baseRefNoField;
        
        private string refIdXpathField;
        
        private string dataSourceField;
        
        private NodeMapInfo[] nodesField;
        
        private NamespaceInfo[] namespacesField;
        
        private DocumentIndexInfo[] indexesField;
        
        private DocumentTypePropertyInfo[] propertiesField;
        
        private DocumentTypePermissionInfo[] permissionsField;
        
        private bool checkAccessPermissionsField;
        
        private bool failInsertOnShredErrorField;
        
        private bool failInsertOnPromotedPropertyErrorField;
        
        private byte[] templateField;
        
        private bool isSignedTemplateField;
        
        private string accountField;
        
        private string solutionGroupField;
        
        private string descriptionField;
        
        private string piField;
        
        private SharePointListMapInfo[] sharePointListsField;
        
        private System.Nullable<int> idField;
        
        private string friendlyNameField;
        
        private System.Nullable<int> domainIdField;
        
        private System.Nullable<int> iconIdField;
        
        private bool disableHrefInjectField;
        
        private bool isSystemDocumentTypeField;
        
        private bool enableXmlIndexField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool HistoryFlg {
            get {
                return this.historyFlgField;
            }
            set {
                this.historyFlgField = value;
            }
        }
        
        /// <remarks/>
        public string RefIdFormat {
            get {
                return this.refIdFormatField;
            }
            set {
                this.refIdFormatField = value;
            }
        }
        
        /// <remarks/>
        public int BaseRefNo {
            get {
                return this.baseRefNoField;
            }
            set {
                this.baseRefNoField = value;
            }
        }
        
        /// <remarks/>
        public string RefIdXpath {
            get {
                return this.refIdXpathField;
            }
            set {
                this.refIdXpathField = value;
            }
        }
        
        /// <remarks/>
        public string DataSource {
            get {
                return this.dataSourceField;
            }
            set {
                this.dataSourceField = value;
            }
        }
        
        /// <remarks/>
        public NodeMapInfo[] Nodes {
            get {
                return this.nodesField;
            }
            set {
                this.nodesField = value;
            }
        }
        
        /// <remarks/>
        public NamespaceInfo[] Namespaces {
            get {
                return this.namespacesField;
            }
            set {
                this.namespacesField = value;
            }
        }
        
        /// <remarks/>
        public DocumentIndexInfo[] Indexes {
            get {
                return this.indexesField;
            }
            set {
                this.indexesField = value;
            }
        }
        
        /// <remarks/>
        public DocumentTypePropertyInfo[] Properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
            }
        }
        
        /// <remarks/>
        public DocumentTypePermissionInfo[] Permissions {
            get {
                return this.permissionsField;
            }
            set {
                this.permissionsField = value;
            }
        }
        
        /// <remarks/>
        public bool CheckAccessPermissions {
            get {
                return this.checkAccessPermissionsField;
            }
            set {
                this.checkAccessPermissionsField = value;
            }
        }
        
        /// <remarks/>
        public bool FailInsertOnShredError {
            get {
                return this.failInsertOnShredErrorField;
            }
            set {
                this.failInsertOnShredErrorField = value;
            }
        }
        
        /// <remarks/>
        public bool FailInsertOnPromotedPropertyError {
            get {
                return this.failInsertOnPromotedPropertyErrorField;
            }
            set {
                this.failInsertOnPromotedPropertyErrorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Template {
            get {
                return this.templateField;
            }
            set {
                this.templateField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSignedTemplate {
            get {
                return this.isSignedTemplateField;
            }
            set {
                this.isSignedTemplateField = value;
            }
        }
        
        /// <remarks/>
        public string Account {
            get {
                return this.accountField;
            }
            set {
                this.accountField = value;
            }
        }
        
        /// <remarks/>
        public string SolutionGroup {
            get {
                return this.solutionGroupField;
            }
            set {
                this.solutionGroupField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string PI {
            get {
                return this.piField;
            }
            set {
                this.piField = value;
            }
        }
        
        /// <remarks/>
        public SharePointListMapInfo[] SharePointLists {
            get {
                return this.sharePointListsField;
            }
            set {
                this.sharePointListsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string FriendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> DomainId {
            get {
                return this.domainIdField;
            }
            set {
                this.domainIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> IconId {
            get {
                return this.iconIdField;
            }
            set {
                this.iconIdField = value;
            }
        }
        
        /// <remarks/>
        public bool DisableHrefInject {
            get {
                return this.disableHrefInjectField;
            }
            set {
                this.disableHrefInjectField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSystemDocumentType {
            get {
                return this.isSystemDocumentTypeField;
            }
            set {
                this.isSystemDocumentTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableXmlIndex {
            get {
                return this.enableXmlIndexField;
            }
            set {
                this.enableXmlIndexField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qdabra.com/webservices/")]
    public partial class DocumentStringInfo {
        
        private int docIDField;
        
        private int versionNoField;
        
        private string refIDField;
        
        private bool isLockedField;
        
        private string lockedByField;
        
        private System.DateTime lockExpiresField;
        
        private string lockCommentsField;
        
        private string contentField;
        
        private string nameField;
        
        private string authorField;
        
        private string descriptionField;
        
        private DocumentPropertyInfo[] propertiesField;
        
        /// <remarks/>
        public int DocID {
            get {
                return this.docIDField;
            }
            set {
                this.docIDField = value;
            }
        }
        
        /// <remarks/>
        public int VersionNo {
            get {
                return this.versionNoField;
            }
            set {
                this.versionNoField = value;
            }
        }
        
        /// <remarks/>
        public string RefID {
            get {
                return this.refIDField;
            }
            set {
                this.refIDField = value;
            }
        }
        
        /// <remarks/>
        public bool IsLocked {
            get {
                return this.isLockedField;
            }
            set {
                this.isLockedField = value;
            }
        }
        
        /// <remarks/>
        public string LockedBy {
            get {
                return this.lockedByField;
            }
            set {
                this.lockedByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LockExpires {
            get {
                return this.lockExpiresField;
            }
            set {
                this.lockExpiresField = value;
            }
        }
        
        /// <remarks/>
        public string LockComments {
            get {
                return this.lockCommentsField;
            }
            set {
                this.lockCommentsField = value;
            }
        }
        
        /// <remarks/>
        public string Content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public DocumentPropertyInfo[] Properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qdabra.com/webservices/")]
    public partial class DocumentInfo {
        
        private int docIDField;
        
        private int versionNoField;
        
        private string refIDField;
        
        private bool isLockedField;
        
        private string lockedByField;
        
        private System.DateTime lockExpiresField;
        
        private string lockCommentsField;
        
        private System.Xml.XmlNode contentField;
        
        private string nameField;
        
        private string authorField;
        
        private string descriptionField;
        
        private DocumentPropertyInfo[] propertiesField;
        
        private string submitKeyField;
        
        /// <remarks/>
        public int DocID {
            get {
                return this.docIDField;
            }
            set {
                this.docIDField = value;
            }
        }
        
        /// <remarks/>
        public int VersionNo {
            get {
                return this.versionNoField;
            }
            set {
                this.versionNoField = value;
            }
        }
        
        /// <remarks/>
        public string RefID {
            get {
                return this.refIDField;
            }
            set {
                this.refIDField = value;
            }
        }
        
        /// <remarks/>
        public bool IsLocked {
            get {
                return this.isLockedField;
            }
            set {
                this.isLockedField = value;
            }
        }
        
        /// <remarks/>
        public string LockedBy {
            get {
                return this.lockedByField;
            }
            set {
                this.lockedByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LockExpires {
            get {
                return this.lockExpiresField;
            }
            set {
                this.lockExpiresField = value;
            }
        }
        
        /// <remarks/>
        public string LockComments {
            get {
                return this.lockCommentsField;
            }
            set {
                this.lockCommentsField = value;
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public DocumentPropertyInfo[] Properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SubmitKey {
            get {
                return this.submitKeyField;
            }
            set {
                this.submitKeyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://qdabra.com/webservices/")]
    public partial class GetListItems {
        
        private string listNameField;
        
        private string viewNameField;
        
        private System.Xml.XmlNode queryField;
        
        private System.Xml.XmlNode viewFieldsField;
        
        private string rowLimitField;
        
        private System.Xml.XmlNode queryOptionsField;
        
        /// <remarks/>
        public string listName {
            get {
                return this.listNameField;
            }
            set {
                this.listNameField = value;
            }
        }
        
        /// <remarks/>
        public string viewName {
            get {
                return this.viewNameField;
            }
            set {
                this.viewNameField = value;
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode query {
            get {
                return this.queryField;
            }
            set {
                this.queryField = value;
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode viewFields {
            get {
                return this.viewFieldsField;
            }
            set {
                this.viewFieldsField = value;
            }
        }
        
        /// <remarks/>
        public string rowLimit {
            get {
                return this.rowLimitField;
            }
            set {
                this.rowLimitField = value;
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode queryOptions {
            get {
                return this.queryOptionsField;
            }
            set {
                this.queryOptionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://qdabra.com/webservices/")]
    public partial class GetMyListItems {
        
        private string listNameField;
        
        private string viewNameField;
        
        private System.Xml.XmlNode queryField;
        
        private System.Xml.XmlNode viewFieldsField;
        
        private string rowLimitField;
        
        private System.Xml.XmlNode queryOptionsField;
        
        /// <remarks/>
        public string listName {
            get {
                return this.listNameField;
            }
            set {
                this.listNameField = value;
            }
        }
        
        /// <remarks/>
        public string viewName {
            get {
                return this.viewNameField;
            }
            set {
                this.viewNameField = value;
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode query {
            get {
                return this.queryField;
            }
            set {
                this.queryField = value;
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode viewFields {
            get {
                return this.viewFieldsField;
            }
            set {
                this.viewFieldsField = value;
            }
        }
        
        /// <remarks/>
        public string rowLimit {
            get {
                return this.rowLimitField;
            }
            set {
                this.rowLimitField = value;
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode queryOptions {
            get {
                return this.queryOptionsField;
            }
            set {
                this.queryOptionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qdabra.com/webservices/")]
    public enum SearchType {
        
        /// <remarks/>
        All,
        
        /// <remarks/>
        Metadata,
        
        /// <remarks/>
        Data,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://qdabra.com/webservices/")]
    public partial class SearchEx {
        
        private string searchPhraseField;
        
        private SearchMethod searchMethodField;
        
        private SearchType searchTypeField;
        
        private string docTypeField;
        
        private bool getPropertiesField;
        
        private int startField;
        
        private int countField;
        
        /// <remarks/>
        public string searchPhrase {
            get {
                return this.searchPhraseField;
            }
            set {
                this.searchPhraseField = value;
            }
        }
        
        /// <remarks/>
        public SearchMethod searchMethod {
            get {
                return this.searchMethodField;
            }
            set {
                this.searchMethodField = value;
            }
        }
        
        /// <remarks/>
        public SearchType searchType {
            get {
                return this.searchTypeField;
            }
            set {
                this.searchTypeField = value;
            }
        }
        
        /// <remarks/>
        public string docType {
            get {
                return this.docTypeField;
            }
            set {
                this.docTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool getProperties {
            get {
                return this.getPropertiesField;
            }
            set {
                this.getPropertiesField = value;
            }
        }
        
        /// <remarks/>
        public int start {
            get {
                return this.startField;
            }
            set {
                this.startField = value;
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qdabra.com/webservices/")]
    public enum SearchMethod {
        
        /// <remarks/>
        Basic,
        
        /// <remarks/>
        Contains,
        
        /// <remarks/>
        Freetext,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDocumentHistoryCompletedEventHandler(object sender, GetDocumentHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DocumentInfo[] docInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDocumentCompletedEventHandler(object sender, GetDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DocumentInfo docInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDocumentStringCompletedEventHandler(object sender, GetDocumentStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DocumentStringInfo docInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentStringInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDocumentVersionCompletedEventHandler(object sender, GetDocumentVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DocumentInfo docInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDocumentFromRefIdCompletedEventHandler(object sender, GetDocumentFromRefIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentFromRefIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentFromRefIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DocumentInfo docInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void LockDocumentCompletedEventHandler(object sender, LockDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LockDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LockDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DocumentInfo docInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UnlockDocumentCompletedEventHandler(object sender, UnlockDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnlockDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnlockDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DocumentInfo docInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SubmitDocumentAsUserCompletedEventHandler(object sender, SubmitDocumentAsUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitDocumentAsUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitDocumentAsUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int docId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string refId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SubmitDocumentCompletedEventHandler(object sender, SubmitDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int docId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string refId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RemoveDocumentCompletedEventHandler(object sender, RemoveDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RemoveDocumentsCompletedEventHandler(object sender, RemoveDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RemoveAllDocumentsForTypeCompletedEventHandler(object sender, RemoveAllDocumentsForTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveAllDocumentsForTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveAllDocumentsForTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void EnumerateDocumentTypeNamesCompletedEventHandler(object sender, EnumerateDocumentTypeNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumerateDocumentTypeNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnumerateDocumentTypeNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] docTypeNames {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void EnumerateDocumentTypesCompletedEventHandler(object sender, EnumerateDocumentTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumerateDocumentTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnumerateDocumentTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DocumentTypeInfo[] docTypes {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentTypeInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDocumentTypeCompletedEventHandler(object sender, GetDocumentTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DocumentTypeInfo docType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentTypeInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDocumentTypeSummaryCompletedEventHandler(object sender, GetDocumentTypeSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentTypeSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentTypeSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DocumentTypeSummaryInfo docType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentTypeSummaryInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllDocumentTypeSummariesCompletedEventHandler(object sender, GetAllDocumentTypeSummariesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllDocumentTypeSummariesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllDocumentTypeSummariesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DocumentTypeSummaryInfo[] docTypeSummaryInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentTypeSummaryInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDocumentTypeSummariesByGroupCompletedEventHandler(object sender, GetDocumentTypeSummariesByGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentTypeSummariesByGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentTypeSummariesByGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DocumentTypeSummaryInfo[] docTypeSummaryInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentTypeSummaryInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetDocumentTypeCompletedEventHandler(object sender, SetDocumentTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetDocumentTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetDocumentTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void PrepareTemplateForSigningCompletedEventHandler(object sender, PrepareTemplateForSigningCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrepareTemplateForSigningCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrepareTemplateForSigningCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public byte[] template {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetDocumentTypeMappingCompletedEventHandler(object sender, SetDocumentTypeMappingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetDocumentTypeMappingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetDocumentTypeMappingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RemoveDocumentTypeCompletedEventHandler(object sender, RemoveDocumentTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveDocumentTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveDocumentTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDocumentsByTypeCompletedEventHandler(object sender, GetDocumentsByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentsByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentsByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DocumentInfo[] docInfos {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMyDocumentsByTypeCompletedEventHandler(object sender, GetMyDocumentsByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyDocumentsByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyDocumentsByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DocumentInfo[] docInfos {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDocumentSummaryByTypeCompletedEventHandler(object sender, GetDocumentSummaryByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentSummaryByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentSummaryByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DocumentSummaryInfo[] docInfos {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentSummaryInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMyDocumentSummaryByTypeCompletedEventHandler(object sender, GetMyDocumentSummaryByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyDocumentSummaryByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyDocumentSummaryByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DocumentSummaryInfo[] docInfos {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentSummaryInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetListItemsCompletedEventHandler(object sender, GetListItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetListItemsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetListItemsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMyListItemsCompletedEventHandler(object sender, GetMyListItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyListItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyListItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetMyListItemsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetMyListItemsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void QueryDocumentsCompletedEventHandler(object sender, QueryDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DocumentInfo[] docInfos {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void QueryDocumentsHistoryCompletedEventHandler(object sender, QueryDocumentsHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDocumentsHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDocumentsHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DocumentInfo[] docInfos {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SearchCompletedEventHandler(object sender, SearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DocumentSummaryInfo[] docInfos {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentSummaryInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SearchExCompletedEventHandler(object sender, SearchExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SearchExResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SearchExResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ChangeDocumentTypeOfDocumentCompletedEventHandler(object sender, ChangeDocumentTypeOfDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeDocumentTypeOfDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeDocumentTypeOfDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDocumentTypeIdCompletedEventHandler(object sender, GetDocumentTypeIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentTypeIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentTypeIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int documentTypeId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDocumentTypePermissionInfoCompletedEventHandler(object sender, GetDocumentTypePermissionInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentTypePermissionInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentTypePermissionInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DocumentTypePermissionInfo[] permissionInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentTypePermissionInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SubmitDocumentWithKeyCompletedEventHandler(object sender, SubmitDocumentWithKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitDocumentWithKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitDocumentWithKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int docId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string refId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SubmitDocumentWithKeyAsUserCompletedEventHandler(object sender, SubmitDocumentWithKeyAsUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitDocumentWithKeyAsUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitDocumentWithKeyAsUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int docId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string refId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void QueryDocumentWithKeyCompletedEventHandler(object sender, QueryDocumentWithKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDocumentWithKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDocumentWithKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DocumentKeyDetails details {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentKeyDetails)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void QueryDocumentsNodeSetCompletedEventHandler(object sender, QueryDocumentsNodeSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDocumentsNodeSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDocumentsNodeSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591